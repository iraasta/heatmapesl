defmodule Heatmap.HeatmapChannel do
	use Phoenix.Channel

	def random_coord(from, to) do
		(:random.uniform() * (to - from)) + from
		|> round()
	end
	
	def await_dp(socket) do
		receive do
			{:msg, msg} -> push socket, "datapoint", %{x: random_coord(0,100), y: random_coord(0,100), value: 5}
			_ -> throw "What tha hell"
		end
		await_dp(socket)
	end

	def join("heatmap:data", _auth_msg, socket) do
	  {:ok, socket}
	end
	def join("rooms:" <> _private_room_id, _auth_msg, socket) do
	  {:error, %{reason: "unauthorized"}}
	end
	def handle_in("subscribe", _, socket) do
		{:noreply, socket}
	end
end

